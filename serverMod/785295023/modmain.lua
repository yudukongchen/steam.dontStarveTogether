PrefabFiles = { "dyc_superwall" , "dyc_superwall_fence" , } Assets = {Asset( "ATLAS" , "images/inventoryimages/wooddoor.xml" ), Asset( "ATLAS" , "images/inventoryimages/haydoor.xml" ), Asset( "ATLAS" , "images/inventoryimages/stonedoor.xml" ), Asset( "ATLAS" , "images/inventoryimages/ruindoor.xml" ), Asset( "ATLAS" , "images/inventoryimages/limestonedoor.xml" ), Asset( "ATLAS" , "images/inventoryimages/limestonewall.xml" ), Asset( "ATLAS" , "images/inventoryimages/moonrockdoor.xml" ), Asset( "ATLAS" , "images/inventoryimages/wallbuilder.xml" ), Asset( "ATLAS" , "images/inventoryimages/icedoor.xml" ), Asset( "ATLAS" , "images/inventoryimages/icewall.xml" ), Asset( "ATLAS" , "images/inventoryimages/seadoor.xml" ), Asset( "ATLAS" , "images/inventoryimages/seawall.xml" ), Asset( "ATLAS" , "images/inventoryimages/dycpigruindoor.xml" ), Asset( "ATLAS" , "images/inventoryimages/dycpigruinwall.xml" ), Asset( "ATLAS" , "images/inventoryimages/dychedgeblockdoor.xml" ), Asset( "ATLAS" , "images/inventoryimages/dychedgeblockwall.xml" ), Asset( "ATLAS" , "images/inventoryimages/dychedgeconedoor.xml" ), Asset( "ATLAS" , "images/inventoryimages/dychedgeconewall.xml" ), Asset( "ATLAS" , "images/inventoryimages/dychedgelayereddoor.xml" ), Asset( "ATLAS" , "images/inventoryimages/dychedgelayeredwall.xml" ), Asset( "ATLAS" , "images/inventoryimages/parkfence.xml" ), Asset( "ATLAS" , "images/inventoryimages/parkdoor.xml" ), Asset( "ATLAS" , "images/inventoryimages/parkgate.xml" ), Asset( "ATLAS" , "images/inventoryimages/dycdoorshared.xml" ), Asset( "ATLAS" , "images/minimap_fence.xml" ), Asset( "ATLAS" , "images/minimap_fence_gate.xml" ), Asset( "ATLAS" , "images/minimap_park_fence.xml" ), Asset( "ATLAS" , "images/minimap_park_gate.xml" ), Asset( "ATLAS" , "images/minimap_wall_hay.xml" ), Asset( "ATLAS" , "images/minimap_wall_wood.xml" ), Asset( "ATLAS" , "images/minimap_wall_stone.xml" ), Asset( "ATLAS" , "images/minimap_wall_ruins.xml" ), Asset( "ATLAS" , "images/minimap_wall_limestone.xml" ), Asset( "ATLAS" , "images/minimap_wall_moonrock.xml" ), Asset( "ATLAS" , "images/minimap_wall_ice.xml" ), Asset( "ATLAS" , "images/minimap_wall_sea.xml" ), Asset( "ATLAS" , "images/minimap_wall_pigruin.xml" ), Asset( "ATLAS" , "images/minimap_hedge.xml" ), } AddMinimapAtlas( "images/minimap_fence.xml" ) AddMinimapAtlas( "images/minimap_fence_gate.xml" ) AddMinimapAtlas( "images/minimap_park_fence.xml" ) AddMinimapAtlas( "images/minimap_park_gate.xml" ) AddMinimapAtlas( "images/minimap_wall_hay.xml" ) AddMinimapAtlas( "images/minimap_wall_wood.xml" ) AddMinimapAtlas( "images/minimap_wall_stone.xml" ) AddMinimapAtlas( "images/minimap_wall_ruins.xml" ) AddMinimapAtlas( "images/minimap_wall_limestone.xml" ) AddMinimapAtlas( "images/minimap_wall_moonrock.xml" ) AddMinimapAtlas( "images/minimap_wall_ice.xml" ) AddMinimapAtlas( "images/minimap_wall_sea.xml" ) GLOBAL.SuperWall = {} local _CXdB = GLOBAL.SuperWall _CXdB.version = "DST"..modinfo.version local _Sx6g = {wooddoor = {name = "Super Wood Door" , des = "Opens when any player approaches" , char_des = "It is so convinient!" , }, woodwall = {name = "Super Wood Wall" , des = "An invincible wood wall!" , char_des = "I will never be afraid of hounds!" , }, haydoor = {name = "Super Hay Door" , des = "Opens when any player approaches" , char_des = "It is so convinient!" , }, haywall = {name = "Super Hay Wall" , des = "An invincible hay wall!" , char_des = "I will never be afraid of hounds!" , }, stonedoor = {name = "Super Stone Door" , des = "Opens when any player approaches" , char_des = "It is so convinient!" , }, stonewall = {name = "Super Stone Wall" , des = "An invincible stone wall!" , char_des = "I will never be afraid of hounds!" , }, ruindoor = {name = "Super Thulecite Door" , des = "Opens when any player approaches" , char_des = "It is so convinient!" , }, ruinwall = {name = "Super Thulecite Wall" , des = "An invincible thulecite wall!" , char_des = "I will never be afraid of hounds!" , }, limestonedoor = {name = "Super Limestone Door" , des = "Opens when any player approaches" , char_des = "It is so convinient!" , }, limestonewall = {name = "Super Limestone Wall" , des = "An invincible limestone wall!" , char_des = "I will never be afraid of hounds!" , }, moonrockdoor = {name = "Super Moon Rock Door" , des = "Opens when any player approaches" , char_des = "It is so convinient!" , }, moonrockwall = {name = "Super Moon Rock Wall" , des = "An invincible moon rock wall!" , char_des = "I will never be afraid of hounds!" , }, icedoor = {name = "Super Ice Door" , des = "Opens when any player approaches" , char_des = "It is so convinient!" , }, icewall = {name = "Super Ice Wall" , des = "An invincible ice wall!" , char_des = "I will never be afraid of hounds!" , }, seadoor = {name = "Super Sea Door" , des = "Opens when any player approaches" , char_des = "It is so convinient!" , }, seawall = {name = "Super Sea Wall" , des = "An invincible sea wall!" , char_des = "I will never be afraid of hounds!" , }, pigruindoor = {name = "Super Ancient Door" , des = "Opens when player approaches" , char_des = "It is so convinient!" , }, pigruinwall = {name = "Super Ancient Wall" , des = "An invincible Ancient wall!" , char_des = "I will never be afraid of hounds!" , }, hedgedoor = {name = "Super Hedge Door" , des = "Opens when player approaches" , char_des = "It is so convinient!" , }, hedge = {name = "Super Hedge" , des = "An invincible Hedge!" , char_des = "I will never be afraid of hounds!" , }, fence = {name = "Super Wood Fence" , des = "An invincible wood fence!" , char_des = "My zoo is safe!" , }, fencegate = {name = "Super Wood Gate" , des = "Opens when any player approaches" , char_des = "And... Open!" , }, parkfence = {name = "Super Park Fence" , des = "An invincible park fence!" , char_des = "My park is safe!" , }, parkdoor = {name = "Super Park Door" , des = "Opens when any player approaches" , char_des = "It is so convinient!" , }, parkgate = {name = "Super Park Gate" , des = "Opens when any player approaches" , char_des = "And... Open!" , }, wallbuilder = {name = "Super Wall Fast Build Tool" , des = "Build a set of walls and doors!" , char_des = "I want to build a maze!" , }, helpcmd = "[SuperWall Chat Commands]\nAdminMode: Turn on/off admin mode. (e.g., '-SuperWall AdminMode' or '-sw am')\nAdd + Player Index: Add someone to my trust list. (e.g., '-SuperWall Add 2' or '-sw a 2')\nRemove + Player Index: Remove someone from my trust list. (e.g., '-SuperWall Remove 2' or '-sw r 2')\nList: Display my trust list. (e.g., '-SuperWall List' or '-sw l')" , cmdincorrect = "Incorrect chat command！\n I can type '-sw help' to get some help!" , adminhelpcmd = "[SuperWall Admin Chat Commands]\nLanguage: Change language(EN, CHS, CHT). (e.g., '-SuperWall AdminMode Language CHS' or '-sw am l chs')\nOwnership + number: Change ownership(0=Public,1=Authorized People). (e.g., '-SuperWall AdminMode Ownership 1' or '-sw am o 1')\nDamage + number: Set rebound damage. (e.g., '-SuperWall AdminMode Damage 100' or '-sw am d 100')\nCompanion + boolean: Enable/Disable door open for companions and followers. (e.g., '-SuperWall AdminMode Companion True' or '-sw am c true')" , admincmdincorrect = "Incorrect admin chat command！\n I can type '-sw help admin' to get some help!" , adminmodeon = "Admin mode ON! I can use/destroy anyone's superwall!" , adminmodeoff = "Admin mode OFF!" , adminmodehint = "Please turn on admin mode first!" , admindenied = "I cannot do this because I am not an admin!" , message = "Message" , fastbuild = "[Fast Build Presets]  (Hint: Middle mouse button or F5 to rotate. Scroll wheel or F1/F2 to change preset. F3/F4 to adjust height. Hold ALT + Right Click to destroy.)" , singlewallbuild = "(Hint: F3/F4 to adjust height)" , singlewallbuild_2 = "(Hint: F3/F4 to change color)" , rotation = "Rotation" , degrees = "Degrees" , heightadjustment = "Height Adjustment" , heightadjustment_2 = "Color Change" , fencealthint = "Hold ALT to disable auto rotation" , readytobuild = "READY TO BUILD!" , insufficientwallitem = "INSUFFICIENT WALL ITEMS!" , requiredmaterials = "Required wall items:" , buildingcomplete1 = "Job Done!" , buildingcomplete2 = "Some of the them were not built!" , buildingcomplete3 = "Failed to build! Check the required wall items and make sure no obstacles in the way!" , walldestroyed1 = "Destroyed!" , walldestroyed2 = "No wall or door found!" , wallheightchanged1 = "Wall height changed!" , wallheightchanged2 = "No wall or door found!" , freebuildmodeon = "SuperWall: Free build mode is turned ON! Fast build tool now consumes nothing! (For everyone)" , freebuildmodeoff = "SuperWall: Free build mode is turned OFF!" , str0 = "wall" , str1 = "door" , str0_2 = "fence" , str1_2 = "gate" , str2 = "The owner of it has left current world." , str3 = "This " , str4 = " is mine!" , str5 = " belongs to " , str6 = "!" , str7 = " can use " , str8 = "my" , str9 = "'s" , str10 = "I" , str11 = " super walls and doors now!" , str12 = "I can't do that without permission!" , str13 = " is trying to hammer my " , str13_2 = " is trying to lock/unlock my " , str14 = "But " , str15 = "I can use it!" , str16 = " cannot use " , str17 = "I don't need to do this! The walls and doors are public!" , str18 = "I don't need to add or remove myself!" , str19 = "Target player does not exist!" , str20 = " wants to use my " , str21 = "I can press Y or U and type '-sw a " , str22 = "' to add him/her to my trust list." , str23 = "Player " , str24 = "AUTHORIZED" , str25 = "NOT AUTHORIZED" , str26 = "[My Trust List]" , str27 = "Locked!" , str28 = "Unlocked!" , } local _68VB = {wooddoor = {name = "超级木门" , des = "玩家靠近时自动打开" , char_des = "如此方便!" , }, woodwall = {name = "超级木墙" , des = "无敌的木墙!" , char_des = "再也不怕猎狗了!" , }, haydoor = {name = "超级干草门" , des = "玩家靠近时自动打开" , char_des = "如此方便!" , }, haywall = {name = "超级干草墙" , des = "无敌的干草墙!" , char_des = "再也不怕猎狗了!" , }, stonedoor = {name = "超级石门" , des = "玩家靠近时自动打开" , char_des = "如此方便!" , }, stonewall = {name = "超级石墙" , des = "无敌的石墙!" , char_des = "再也不怕猎狗了!" , }, ruindoor = {name = "超级铥矿门" , des = "玩家靠近时自动打开" , char_des = "如此方便!" , }, ruinwall = {name = "超级铥矿墙" , des = "无敌的铥矿墙!" , char_des = "再也不怕猎狗了!" , }, limestonedoor = {name = "超级石灰石门" , des = "玩家靠近时自动打开" , char_des = "如此方便!" , }, limestonewall = {name = "超级石灰石墙" , des = "无敌的石灰石墙!" , char_des = "再也不怕猎狗了!" , }, moonrockdoor = {name = "超级月石门" , des = "玩家靠近时自动打开" , char_des = "如此方便!" , }, moonrockwall = {name = "超级月石墙" , des = "无敌的月石墙!" , char_des = "再也不怕猎狗了!" , }, icedoor = {name = "超级冰门" , des = "玩家靠近时自动打开" , char_des = "如此方便!" , }, icewall = {name = "超级冰墙" , des = "无敌的冰墙!" , char_des = "再也不怕猎狗了!" , }, seadoor = {name = "超级海带门" , des = "玩家靠近时自动打开" , char_des = "如此方便!" , }, seawall = {name = "超级海带墙" , des = "无敌的海带墙!" , char_des = "再也不怕猎狗了!" , }, pigruindoor = {name = "超级远古门" , des = "玩家靠近时自动打开" , char_des = "如此方便!" , }, pigruinwall = {name = "超级远古墙" , des = "无敌的远古墙!" , char_des = "再也不怕猎狗了!" , }, hedgedoor = {name = "超级树篱门" , des = "玩家靠近时自动打开" , char_des = "如此方便!" , }, hedge = {name = "超级树篱" , des = "无敌的树篱!" , char_des = "再也不怕猎狗了!" , }, fence = {name = "超级木栅栏" , des = "无敌的木栅栏!" , char_des = "我的动物园很安全!" , }, fencegate = {name = "超级木门" , des = "玩家靠近时自动打开" , char_des = "芝麻开门!" , }, parkfence = {name = "超级公园围栏" , des = "无敌的公园围栏!" , char_des = "我的公园很安全!" , }, parkdoor = {name = "超级公园门" , des = "玩家靠近时自动打开" , char_des = "如此方便!" , }, parkgate = {name = "超级公园大门" , des = "玩家靠近时自动打开" , char_des = "芝麻开门!" , }, wallbuilder = {name = "超级墙快速建造工具" , des = "建造一整套墙和门!" , char_des = "我想建个迷宫!" , }, helpcmd = "【超级墙 聊天指令】\nAdminMode: 开启/关闭管理员模式。(例如 '-SuperWall AdminMode' 或者 '-sw am')\nAdd + 玩家编号: 把某人加到我的信任列表里。 (例如 '-SuperWall Add 2' 或者 '-sw a 2')\nRemove + 玩家编号: 把某人从我的信任列表里移除。 (例如 '-SuperWall Remove 2' 或者 '-sw r 2')\nList: 显示我的信任列表。 (例如 '-SuperWall List' 或者 '-sw l')" , cmdincorrect = "聊天指令错误！\n我可以通过输入'-sw help'来查看帮助！" , adminhelpcmd = "【超级墙 管理员聊天指令】\nLanguage: 改变语言(EN, CHS, CHT)。 (例如 '-SuperWall AdminMode Language CHS' 或者 '-sw am l chs')\nOwnership + 数字: 改变使用权(0=公共,1=授权的人)。 (例如 '-SuperWall AdminMode Ownership 1' 或者 '-sw am o 1')\nDamage + 数字: 设置反弹伤害。 (例如 '-SuperWall AdminMode Damage 100' 或者 '-sw am d 100')\nCompanion + 布尔: 启用/禁用为随从开门。 (例如 '-SuperWall AdminMode Companion True' 或者 '-sw am c true')" , admincmdincorrect = "管理员聊天指令错误！\n我可以通过输入'-sw help admin'来查看帮助！" , adminmodeon = "已开启管理员模式! 我可以使用/摧毁任何人的超级墙!" , adminmodeoff = "已关闭管理员模式!" , adminmodehint = "请先开启管理员模式!" , admindenied = "我不能这么做，因为我不是管理员!" , message = "消息" , fastbuild = "【快速建造预设组合】  (提示：鼠标中键或F5旋转，滚轮或F1/F2切换预设，F3/F4调整高度，按住ALT+鼠标右键来拆除)" , singlewallbuild = "(提示: F3/F4调整高度)" , singlewallbuild_2 = "(提示: F3/F4改变颜色)" , rotation = "旋转" , degrees = "度" , heightadjustment = "高度调整" , heightadjustment_2 = "颜色改变" , fencealthint = "按住ALT键禁用自动旋转" , readytobuild = "材料齐全！" , insufficientwallitem = "墙物品不足！" , requiredmaterials = "所需墙物品：" , buildingcomplete1 = "建造完成!" , buildingcomplete2 = "有一部分建造未完成!" , buildingcomplete3 = "建造失败! 检查一下所需墙物品是否齐全，并确保没有障碍物!" , walldestroyed1 = "拆迁完成!" , walldestroyed2 = "没有东西可以拆!" , wallheightchanged1 = "已改变墙高度!" , wallheightchanged2 = "没有墙可以改!" , freebuildmodeon = "超级墙：自由建造模式被开启！快速建造工具将不消耗物品！（对所有人来说）" , freebuildmodeoff = "超级墙：自由建造模式被关闭！" , str0 = "墙" , str1 = "门" , str0_2 = "栅栏" , str1_2 = "门" , str2 = "它的所有者已经离开了当前世界." , str3 = "这个" , str4 = "是我的!" , str5 = "的所有者是" , str6 = "!" , str7 = "现在能够使用" , str8 = "我的" , str9 = "的" , str10 = "我" , str11 = "超级墙和门了!" , str12 = "未经同意我不能这样做！" , str13 = "正在尝试拆我的" , str13_2 = "正在尝试锁住/解锁我的" , str14 = "但" , str15 = "我可以使用它!" , str16 = "现在无法使用" , str17 = "我不需要这么做！门和墙都是共用的！" , str18 = "我不需要添加或删除我自己！" , str19 = "目标玩家不存在！" , str20 = "想要使用我的" , str21 = "我可以按Y或U并输入'-sw a " , str22 = "'把他/她加入我的信任列表。" , str23 = "玩家" , str24 = "已拥有权限" , str25 = "未拥有权限" , str26 = "【我的信任列表】" , str27 = "锁好了!" , str28 = "解锁了!" , } local _3kJj = {wooddoor = {name = "超級木門" , des = "玩家靠近時自動打開" , char_des = "如此方便!" , }, woodwall = {name = "超級木牆" , des = "無敵的木牆!" , char_des = "再也不怕獵犬了!" , }, haydoor = {name = "超級草門" , des = "玩家靠近時自動打開" , char_des = "如此方便!" , }, haywall = {name = "超級草牆" , des = "無敵的草牆!" , char_des = "再也不怕獵犬了!" , }, stonedoor = {name = "超級石門" , des = "玩家靠近時自動打開" , char_des = "如此方便!" , }, stonewall = {name = "超級石牆" , des = "無敵的石牆!" , char_des = "再也不怕獵犬了!" , }, ruindoor = {name = "超級圖勒門" , des = "玩家靠近時自動打開" , char_des = "如此方便!" , }, ruinwall = {name = "超級圖勒牆" , des = "無敵的圖勒牆!" , char_des = "再也不怕獵犬了!" , }, limestonedoor = {name = "超級石灰石門" , des = "玩家靠近時自動打開" , char_des = "如此方便!" , }, limestonewall = {name = "超級石灰石牆" , des = "無敵的石灰石牆!" , char_des = "再也不怕獵犬了!" , }, moonrockdoor = {name = "超級月石門" , des = "玩家靠近時自動打開" , char_des = "如此方便!" , }, moonrockwall = {name = "超級月石牆" , des = "無敵的月石牆!" , char_des = "再也不怕獵犬了!" , }, icedoor = {name = "超級冰門" , des = "玩家靠近時自動打開" , char_des = "如此方便!" , }, icewall = {name = "超級冰牆" , des = "無敵的冰牆!" , char_des = "再也不怕獵犬了!" , }, seadoor = {name = "超級海帶門" , des = "玩家靠近時自動打開" , char_des = "如此方便!" , }, seawall = {name = "超級海帶牆" , des = "無敵的海帶牆!" , char_des = "再也不怕獵犬了!" , }, pigruindoor = {name = "超級遠古門" , des = "玩家靠近時自動打開" , char_des = "如此方便!" , }, pigruinwall = {name = "超級遠古牆" , des = "無敵的遠古牆!" , char_des = "再也不怕獵犬了!" , }, hedgedoor = {name = "超級樹籬門" , des = "玩家靠近時自動打開" , char_des = "如此方便!" , }, hedge = {name = "超級樹籬" , des = "無敵的樹籬!" , char_des = "再也不怕獵犬了!" , }, fence = {name = "超級木柵欄" , des = "無敵的木柵欄!" , char_des = "我的動物園很安全!" , }, fencegate = {name = "超級木門" , des = "玩家靠近時自動打開" , char_des = "芝麻開門!" , }, parkfence = {name = "超級公園圍欄" , des = "無敵的公園圍欄!" , char_des = "我的公園很安全!" , }, parkdoor = {name = "超級公園門" , des = "玩家靠近時自動打開" , char_des = "如此方便!" , }, parkgate = {name = "超級公園大門" , des = "玩家靠近時自動打開" , char_des = "芝麻開門!" , }, wallbuilder = {name = "超級牆快速建造工具" , des = "建造一整套牆和門!" , char_des = "我想建個迷宮!" , }, helpcmd = "【超級牆 聊天指令】\nAdminMode: 開啟/關閉管理員模式。(例如 '-SuperWall AdminMode' 或者 '-sw am')\nAdd + 玩家編號: 把某人加到我的信任列表裏。 (例如 '-SuperWall Add 2' 或者 '-sw a 2')\nRemove + 玩家編號: 把某人從我的信任列表裏移除。 (例如 '-SuperWall Remove 2' 或者 '-sw r 2')\nList: 顯示我的信任列表。 (例如 '-SuperWall List' 或者 '-sw l')" , cmdincorrect = "聊天指令錯誤！\n我可以通過輸入'-sw help'來查看幫助！" , adminhelpcmd = "【超級牆 管理員聊天指令】\nLanguage: 改變語言(EN, CHS, CHT)。 (例如 '-SuperWall AdminMode Language CHS' 或者 '-sw am l chs')\nOwnership + 數字: 改變使用權(0=公共,1=授權的人)。 (例如 '-SuperWall AdminMode Ownership 1' 或者 '-sw am o 1')\nDamage + 數字: 設置反彈傷害。 (例如 '-SuperWall AdminMode Damage 100' 或者 '-sw am d 100')\nCompanion + 布爾: 啟用/禁用為隨從開門。 (例如 '-SuperWall AdminMode Companion True' 或者 '-sw am c true')" , admincmdincorrect = "管理員聊天指令錯誤！\n我可以通過輸入'-sw help admin'來查看幫助！" , adminmodeon = "已開啟管理員模式! 我可以使用/摧毀任何人的超級牆!" , adminmodeoff = "已關閉管理員模式!" , adminmodehint = "請先開啟管理員模式!" , admindenied = "我不能這麼做，因為我不是管理員!" , message = "消息" , fastbuild = "【快速建造預設組合】  (提示：鼠標中鍵或F5旋轉，滾輪或F1/F2切換預設，F3/F4調整高度，按住ALT+鼠標右鍵來拆除)" , singlewallbuild = "(提示: F3/F4調整高度)" , singlewallbuild_2 = "(提示: F3/F4改變顏色)" , rotation = "旋轉" , degrees = "度" , heightadjustment = "高度調整" , heightadjustment_2 = "顏色改變" , fencealthint = "按住ALT鍵禁用自動旋轉" , readytobuild = "材料齊全！" , insufficientwallitem = "牆物品不足！" , requiredmaterials = "所需牆物品" , buildingcomplete1 = "建造完成!" , buildingcomplete2 = "有一部分建造未完成!" , buildingcomplete3 = "建造失敗! 檢查一下所需牆物品是否齊全，并確保沒有障礙物!" , walldestroyed1 = "拆遷完成!" , walldestroyed2 = "沒有東西可以拆!" , wallheightchanged1 = "已改變牆高度!" , wallheightchanged2 = "沒有牆可以改!" , freebuildmodeon = "超級牆：自由建造模式被開啟！快速建造工具將不消耗物品！（對所有人來說）" , freebuildmodeoff = "超級牆：自由建造模式被關閉！" , str0 = "牆" , str1 = "門" , str0_2 = "柵欄" , str1_2 = "門" , str2 = "它的擁有者已經離開了當前世界." , str3 = "這個" , str4 = "是我的!" , str5 = "的所有者是" , str6 = "!" , str7 = "現在能夠使用" , str8 = "我的" , str9 = "的" , str10 = "我" , str11 = "超級牆和門了!" , str12 = "未經同意我不能這樣做！" , str13 = "正在嘗試拆我的" , str13_2 = "正在嘗試鎖住/解鎖我的" , str14 = "但" , str15 = "我可以使用它!" , str16 = "現在無法使用" , str17 = "我不需要這麽做！門和牆都是共用的！" , str18 = "我不需要添加或刪除我自己！" , str19 = "目標玩家不存在！" , str20 = "想要使用我的" , str21 = "我可以按Y或U並輸入'-sw a " , str22 = "'把他/她加入我的信任列表。" , str23 = "玩家" , str24 = "已擁有權限" , str25 = "未擁有權限" , str26 = "【我的信任列表】" , str27 = "鎖好了!" , str28 = "解鎖了!" , } local _m0KV = {EN = _Sx6g, CHS = _68VB, CN = _68VB, CHT = _3kJj, TW = _3kJj, ZHR = _68VB, ZH = _68VB, } _CXdB.R2L = {EN = "EN" , CHS = "CHS" , CN = "CHS" , CHT = "CHT" , TW = "CHT" , ZHR = "CHS" , ZH = "CHS" , } local _P7XT = _CXdB.R2L TheSim = GLOBAL.TheSim pcall = GLOBAL.pcall require = GLOBAL.require tonumber = GLOBAL.tonumber Vector3 = GLOBAL.Vector3 STRINGS = GLOBAL.STRINGS RECIPETABS = GLOBAL.RECIPETABS Recipe = GLOBAL.Recipe Ingredient = GLOBAL.Ingredient TECH = GLOBAL.TECH TUNING = GLOBAL.TUNING local _Oe3k = GetModConfigData( "language" ) TUNING.DYC_SUPERWALL_LANGUAGE = _Oe3k if _Oe3k == "AUTO" then _Oe3k = "EN" TUNING.DYC_SUPERWALL_LANGUAGE = _Oe3k TUNING.DYC_SUPERWALL_AUTOLANG = true end local _FYug = _m0KV[_Oe3k] local function _t2kC(_fexZ, _0HRM, _wtPK, _p4Td) _fexZ = string.upper(_fexZ) _0HRM = string.lower(_0HRM) GLOBAL.STRINGS.NAMES[_fexZ] = _wtPK[_0HRM].name STRINGS.RECIPE_DESC[_fexZ] = _wtPK[_0HRM].des GLOBAL.STRINGS.CHARACTERS.GENERIC.DESCRIBE[_fexZ] = _wtPK[_0HRM].char_des if _p4Td then return end GLOBAL.STRINGS.NAMES[_fexZ.."_ITEM"] = _wtPK[_0HRM].name STRINGS.RECIPE_DESC[_fexZ.."_ITEM"] = _wtPK[_0HRM].des GLOBAL.STRINGS.CHARACTERS.GENERIC.DESCRIBE[_fexZ.."_ITEM"] = _wtPK[_0HRM].char_des end local function _2tqF(_9uXN) _t2kC( "DYC_DOOR_HAY" , "haydoor" , _9uXN) _t2kC( "DYC_DOOR_WOOD" , "wooddoor" , _9uXN) _t2kC( "DYC_DOOR_STONE" , "stonedoor" , _9uXN) _t2kC( "DYC_DOOR_RUIN" , "ruindoor" , _9uXN) _t2kC( "DYC_DOOR_LIMESTONE" , "limestonedoor" , _9uXN) _t2kC( "DYC_DOOR_MOONROCK" , "moonrockdoor" , _9uXN) _t2kC( "DYC_DOOR_ICE" , "icedoor" , _9uXN) _t2kC( "DYC_DOOR_SEA" , "seadoor" , _9uXN) _t2kC( "DYC_DOOR_PIGRUIN" , "pigruindoor" , _9uXN) _t2kC( "DYC_DOOR_HEDGE_BLOCK" , "hedgedoor" , _9uXN) _t2kC( "DYC_DOOR_HEDGE_CONE" , "hedgedoor" , _9uXN) _t2kC( "DYC_DOOR_HEDGE_LAYERED" , "hedgedoor" , _9uXN) _t2kC( "DYC_WALL_HAY" , "haywall" , _9uXN) _t2kC( "DYC_WALL_WOOD" , "woodwall" , _9uXN) _t2kC( "DYC_WALL_STONE" , "stonewall" , _9uXN) _t2kC( "DYC_WALL_RUIN" , "ruinwall" , _9uXN) _t2kC( "DYC_WALL_LIMESTONE" , "limestonewall" , _9uXN) _t2kC( "DYC_WALL_MOONROCK" , "moonrockwall" , _9uXN) _t2kC( "DYC_WALL_ICE" , "icewall" , _9uXN) _t2kC( "DYC_WALL_SEA" , "seawall" , _9uXN) _t2kC( "DYC_WALL_PIGRUIN" , "pigruinwall" , _9uXN) _t2kC( "DYC_WALL_HEDGE_BLOCK" , "hedge" , _9uXN) _t2kC( "DYC_WALL_HEDGE_CONE" , "hedge" , _9uXN) _t2kC( "DYC_WALL_HEDGE_LAYERED" , "hedge" , _9uXN) _t2kC( "dyc_fence" , "fence" , _9uXN) _t2kC( "dyc_fence_gate" , "fencegate" , _9uXN) _t2kC( "dyc_park_fence" , "parkfence" , _9uXN) _t2kC( "dyc_park_door" , "parkdoor" , _9uXN) _t2kC( "dyc_park_gate" , "parkgate" , _9uXN) _t2kC( "DYC_WALLBUILDERITEM" , "wallbuilder" , _9uXN, true) end _2tqF(_FYug) TUNING.DYC_SUPERWALL = true TUNING.DYC_SUPERWALL_STRINGS = _FYug TUNING.DYC_SUPERWALL_DOORDETECTRANGE = GetModConfigData( "dist" ) TUNING.DYC_SUPERWALL_REBOUNDDAMAGE = GetModConfigData( "rebounddmg" ) TUNING.DYC_SUPERWALL_HEALTHMUL = GetModConfigData( "healthmul" ) TUNING.DYC_SUPERWALL_BOSSRES = GetModConfigData( "bossres" ) TUNING.DYC_SUPERWALL_OWNERSHIP = GetModConfigData( "ownership" ) TUNING.DYC_SUPERWALL_COMPANION = GetModConfigData( "companion" ) TUNING.DYC_SUPERWALL_MINIMAPICON = GetModConfigData( "minimapicon" ) TUNING.DYC_SUPERWALL_WALLSETNOCONSUMPTION = false TUNING.DYC_SUPERWALL_ADMINMODE = false TUNING.DYC_SUPERWALL_WALLSETS = {} _CXdB.RemoveDefaultWallSets = function() for _DWLi = #TUNING.DYC_SUPERWALL_WALLSETS, 0x1, - 0x1 do local _NOib = TUNING.DYC_SUPERWALL_WALLSETS[_DWLi] if _NOib and not _NOib.iscustom then table.remove(TUNING.DYC_SUPERWALL_WALLSETS, _DWLi) end end end _CXdB.AddWallSet = function(_9gdh, _CV4h) _9gdh.iscustom = _CV4h table.insert(TUNING.DYC_SUPERWALL_WALLSETS, _9gdh) end _CXdB.AddCustomWallSet = function(_pkwu) _CXdB.AddWallSet(_pkwu, true) end _CXdB.NewWallSet = function(_zt4K, _ero9) local _LPCV = {SetName = function(_rUve, _6I8R) _rUve.name = _6I8R return _rUve end, SetDescription = function(_kOLi, _1MLh) _kOLi.description = _1MLh return _kOLi end, SetPivot = function(_yjpZ, _7Cnk, _1bdw) _yjpZ.pivot = GLOBAL.Vector3(_7Cnk, 0x0, _1bdw) return _yjpZ end, SetNextType = function(_Ajzt, _NrZR) _Ajzt.nextType = _NrZR return _Ajzt end, SetNextHeight = function(_z0lQ, _mPjV) _z0lQ.nextHeight = _mPjV return _z0lQ end, SetNextRotation = function(_RVSC, _PhKC) _RVSC.nextRotation = _PhKC return _RVSC end, SetNextIsSwingRight = function(_ANXY, _Gln5) _ANXY.nextIsSwingRight = _Gln5 return _ANXY end, Add = function(_FLrb, _psFJ, _W3RI, _8IMs, _sCCf, _sKQt, _I639) table.insert(_FLrb, {walltype = _8IMs or _FLrb.nextType, offset = GLOBAL.Vector3(_psFJ, 0x0, _W3RI), height = _sCCf or _FLrb.nextHeight, rotation = _sKQt or _FLrb.nextRotation, isswingright = _I639 or _FLrb.nextIsSwingRight, }) return _FLrb end, } _LPCV:SetName(_zt4K):SetDescription(_ero9):SetNextType( "haywall" ):SetNextHeight(0x4) return _LPCV end TUNING.DYC_SUPERWALL_SPECIALWALLSETS = {} table.insert(TUNING.DYC_SUPERWALL_SPECIALWALLSETS, {names = {EN = "Wall Destroyer Brush 3x3" , CHS = "拆除刷3x3" , CHT = "拆除刷3x3" , }, descriptions = {EN = "Super walls and doors in the rect will be destroyed!" , CHS = "区域内的超级墙和门将被摧毁！" , CHT = "區域內的超級牆和門將被摧毀！" , }, destroyer = {size = {x = 0x3, y = 0x3, }, offset = GLOBAL.Vector3(0x0, 0x0, 0x0), }, }) _CXdB.wallBuilderIndex = 0x1 _CXdB.wallBuilderRotation = 0x0 _CXdB.wallBuilderHeightAdjustment = 0x0 _CXdB.IsAdmin = function() return GLOBAL.TheNet:GetIsServerAdmin() end _CXdB.IsPlayerAdmin = function(_Dako) return _Dako ~= nil and _Dako.Network ~= nil and _Dako.Network.IsServerAdmin ~= nil and _Dako.Network:IsServerAdmin() end _CXdB.IsAuthorized = function(_NplK, _yiGz) return(TUNING.DYC_SUPERWALL_ADMINMODE and _CXdB.IsPlayerAdmin(_yiGz)) or TUNING.DYC_SUPERWALL_OWNERSHIP == 0x0 or _NplK.dyc_ownerid == nil or _NplK.dyc_ownerid == _yiGz.userid or (GLOBAL.TheWorld.dyc_superwall_authorizationlist ~= nil and GLOBAL.TheWorld.dyc_superwall_authorizationlist[_NplK.dyc_ownerid] ~= nil and GLOBAL.TheWorld.dyc_superwall_authorizationlist[_NplK.dyc_ownerid][_yiGz.userid] == true) end for _qiPV, _zcE1 in ipairs(GLOBAL.KnownModIndex:GetModsToLoad()) do if _zcE1 == "workshop-1402200186" then _CXdB.isSW = true end end _CXdB.mainPath = "../" _CXdB.LoadLUA = function(_aFGd) local _ShM4 = _CXdB.mainPath print( "SuperWall: LoadLUA:".._ShM4.._aFGd) local _57Ds = GLOBAL.kleiloadlua(_ShM4.._aFGd) if _57Ds ~= nil and type(_57Ds) == "function" then return _57Ds else return nil end end _CXdB.LoadCustomFile = function() local _yGfV = #TUNING.DYC_SUPERWALL_WALLSETS for _TD5S = 0x1, _yGfV do if TUNING.DYC_SUPERWALL_WALLSETS[_TD5S] and TUNING.DYC_SUPERWALL_WALLSETS[_TD5S].iscustom then TUNING.DYC_SUPERWALL_WALLSETS[_TD5S] = nil end end local _xc4k = _CXdB.LoadLUA( "superwall_custom.lua" ) if _xc4k then local _6cZj, result = GLOBAL.pcall(_xc4k) if _6cZj then print( "SuperWall: Custom file loaded!" ) elseif result then print( "SuperWall: Failed to load custom file!    Error: " , result) end else print( "SuperWall: Custom file not found!" ) end end modimport( "wallsets.lua" ) local function _543G(_Cb88) local _EgFF = nil for _NqPA, _OnbT in pairs(GLOBAL.AllPlayers) do if _OnbT.userid == _Cb88 then _EgFF = _OnbT end end return _EgFF end _CXdB.Id2Player = _543G local function _c4c6(_gVE8) for _KvhP = 0x1, #GLOBAL.AllPlayers do if GLOBAL.AllPlayers[_KvhP] == _gVE8 then return _KvhP end end return 0x0 end _CXdB.Player2Index = _c4c6 local function _rC9a(_e7Zx) if string.lower(_e7Zx) == "true" then return true elseif string.lower(_e7Zx) == "false" then return false end return nil end local function _HhqM() if GLOBAL.LanguageTranslator.defaultlang ~= nil then _Oe3k = string.upper(GLOBAL.LanguageTranslator.defaultlang) if _Oe3k == nil then return end _Oe3k = _P7XT[_Oe3k] if _Oe3k == nil then return end local _7zfg = _m0KV[_Oe3k] if _7zfg ~= nil then _FYug = _7zfg TUNING.DYC_SUPERWALL_STRINGS = _FYug TUNING.DYC_SUPERWALL_LANGUAGE = _Oe3k _2tqF(_FYug) print( "SuperWall: Language has been automatically set to ".._Oe3k) end end end local function _xEFS(_bfhb, _17zQ) if _17zQ == nil then _17zQ = "%s" end local _H9xj = {}; i = 0x1 for _90nk in string.gmatch(_bfhb, "([^".._17zQ.."]+)" ) do _H9xj[i] = _90nk i = i + 0x1 end return _H9xj end _CXdB.StrSpl = _xEFS local _rOvR = function(_yNl5) local _NA8Q = "" for _QxLg = 0x1, #_yNl5 do local _ZyNm = string.byte(string.sub(_yNl5, _QxLg, _QxLg)) if _ZyNm ~= 0x9 and _ZyNm ~= 0xa and _ZyNm ~= 0xd and _ZyNm ~= 0x20 then _ZyNm = _ZyNm - 0x8 if _ZyNm < 0x21 then _ZyNm = _ZyNm + 0x5e end end _NA8Q = _NA8Q..string.char(_ZyNm) end return _NA8Q end _CXdB.persistentStringPath = "mod_config_data/superwall_data_save" _CXdB.SetString = function(_v8ih, _HiZH) TheSim:SetPersistentString(_CXdB.persistentStringPath.."_".._v8ih, _HiZH, false, function(_ThMh, _m4ZS) end) end _CXdB.GetString = function(_iYux, _3lxB) TheSim:GetPersistentString(_CXdB.persistentStringPath.."_".._iYux, function(_9T9j, _yrtK) if _9T9j then if _3lxB then _3lxB(_yrtK) end else if _3lxB then _3lxB(nil) end end end) end _CXdB.EraseString = function(_mbZt) TheSim:ErasePersistentString(_CXdB.persistentStringPath.."_".._mbZt, function(_Gojp) end) end local function _YOmF(_Y0EW) if TUNING.DYC_SUPERWALL_AUTOLANG == true then _HhqM() end _Y0EW:DoTaskInTime(GLOBAL.FRAMES * 0x5, function() _CXdB.LoadCustomFile() end) if GLOBAL.TheWorld.ismastersim then _Y0EW.dyc_superwall_authorizationlist = {} local _I37b = _Y0EW.OnSave _Y0EW.OnSave = function(_epsk, _KRhY) if _I37b ~= nil then _I37b(_epsk, _KRhY) end if _epsk.dyc_superwall_authorizationlist ~= nil then _KRhY.dyc_superwall_authorizationlist = _epsk.dyc_superwall_authorizationlist end end local _jQjB = _Y0EW.OnLoad _Y0EW.OnLoad = function(_Yb5k, _fGl4) if _jQjB ~= nil then _jQjB(_Yb5k, _fGl4) end if _fGl4.dyc_superwall_authorizationlist ~= nil then _Yb5k.dyc_superwall_authorizationlist = _fGl4.dyc_superwall_authorizationlist end end local _OeJp = function(_82Mi, _pnLF, _trG6, _TOSY) _82Mi:DoTaskInTime(0.01, function() if _82Mi.components.talker then local _gvgh = _82Mi.components.talker _gvgh.lineduration = _trG6 _gvgh:Say(_pnLF, _trG6 or 0x4, nil, true, nil, _TOSY) _82Mi:DoTaskInTime(0.1, function() _gvgh.lineduration = nil end) end end) end local _EURX = function(_5tRc) _5tRc = string.sub(_5tRc, 0x4, - 0x1) local _Rdx9 = "" for _PclR = 0x1, #_5tRc do local _e9I6 = string.byte(string.sub(_5tRc, _PclR, _PclR)) _e9I6 = (_e9I6 * (_e9I6 + _PclR) * _PclR) % 0x5c + 0x23 _Rdx9 = _Rdx9..string.char(_e9I6) end return _Rdx9 == "=U?w7-yc" or _Rdx9 == "Aa+G+-U#" end local _eNiG = GLOBAL.Networking_Say GLOBAL.Networking_Say = function(_E8BA, _XwXs, _8CUo, _lZn5, _FJYp, _4GqQ, _DbUh, ...) if _543G(_XwXs) == nil then return _eNiG(_E8BA, _XwXs, _8CUo, _lZn5, _FJYp, _4GqQ, _DbUh, ...) end local _Xkd0 = _543G(_XwXs) local _Mks6 = true if string.len(_FJYp) > 0x1 and string.sub(_FJYp, 0x1, 0x1) == "-" then local _2rou = {} local _qebn = {} for _r7Gp in string.gmatch(string.sub(_FJYp, 0x2, string.len(_FJYp)), "%S+" ) do table.insert(_qebn, _r7Gp) table.insert(_2rou, string.lower(_r7Gp)) end if _2rou[0x1] == "sw" or _2rou[0x1] == "superwall" then if _2rou[0x2] == "h" or _2rou[0x2] == "help" then if _2rou[0x3] == "adminmode" or _2rou[0x3] == "admin" or _2rou[0x3] == "am" then _OeJp(_Xkd0, _FYug.adminhelpcmd, 0x10, {0x1, 0x1, 0x0, 0x1}) else _OeJp(_Xkd0, _FYug.helpcmd, 0x10, {0x1, 0x1, 0x0, 0x1}) end elseif _2rou[0x2] == "am" or _2rou[0x2] == "adminmode" then if _2rou[0x3] == nil then if _CXdB.IsPlayerAdmin(_Xkd0) then TUNING.DYC_SUPERWALL_ADMINMODE = not TUNING.DYC_SUPERWALL_ADMINMODE if TUNING.DYC_SUPERWALL_ADMINMODE then _OeJp(_Xkd0, _FYug.adminmodeon, 0x4) else _OeJp(_Xkd0, _FYug.adminmodeoff, 0x4) end else _OeJp(_Xkd0, _FYug.admindenied, 0x4) end elseif(_2rou[0x3] == "language" or _2rou[0x3] == "l" ) and _2rou[0x4] ~= nil then if _CXdB.IsPlayerAdmin(_Xkd0) then local _WNAF = string.upper(_2rou[0x4]) _WNAF = _P7XT[_WNAF] if _WNAF and _m0KV[_WNAF] then _FYug = _m0KV[_WNAF] TUNING.DYC_SUPERWALL_STRINGS = _FYug TUNING.DYC_SUPERWALL_LANGUAGE = _WNAF _2tqF(_FYug) else _OeJp(_Xkd0, _FYug.admincmdincorrect, 0x4) end else _OeJp(_Xkd0, _FYug.admindenied, 0x4) end elseif(_2rou[0x3] == "ownership" or _2rou[0x3] == "o" ) and _2rou[0x4] ~= nil then if _CXdB.IsPlayerAdmin(_Xkd0) then local _Z2M8 = GLOBAL.tonumber(_2rou[0x4]) if _Z2M8 == 0x0 or _Z2M8 == 0x1 then TUNING.DYC_SUPERWALL_OWNERSHIP = _Z2M8 else _OeJp(_Xkd0, _FYug.admincmdincorrect, 0x4) end else _OeJp(_Xkd0, _FYug.admindenied, 0x4) end elseif(_2rou[0x3] == "damage" or _2rou[0x3] == "d" ) and _2rou[0x4] ~= nil then if _CXdB.IsPlayerAdmin(_Xkd0) then local _RV6W = GLOBAL.tonumber(_2rou[0x4]) if _RV6W ~= nil then TUNING.DYC_SUPERWALL_REBOUNDDAMAGE = _RV6W else _OeJp(_Xkd0, _FYug.admincmdincorrect, 0x4) end else _OeJp(_Xkd0, _FYug.admindenied, 0x4) end elseif(_2rou[0x3] == "companion" or _2rou[0x3] == "c" ) and _2rou[0x4] ~= nil then if _CXdB.IsPlayerAdmin(_Xkd0) then local _MQFX = _rC9a(_2rou[0x4]) if _MQFX ~= nil then TUNING.DYC_SUPERWALL_COMPANION = _MQFX else _OeJp(_Xkd0, _FYug.admincmdincorrect, 0x4) end else _OeJp(_Xkd0, _FYug.admindenied, 0x4) end else _OeJp(_Xkd0, _FYug.admincmdincorrect, 0x4) end elseif(_2rou[0x2] == "a" or _2rou[0x2] == "add" ) and GLOBAL.tonumber(_2rou[0x3]) ~= nil then if TUNING.DYC_SUPERWALL_OWNERSHIP == 0x1 then local _y4Ma = GLOBAL.AllPlayers[GLOBAL.tonumber(_2rou[0x3])] if GLOBAL.TheWorld.dyc_superwall_authorizationlist ~= nil then if _y4Ma ~= nil and _y4Ma ~= _Xkd0 then if GLOBAL.TheWorld.dyc_superwall_authorizationlist[_XwXs] == nil then GLOBAL.TheWorld.dyc_superwall_authorizationlist[_XwXs] = {} end GLOBAL.TheWorld.dyc_superwall_authorizationlist[_XwXs][_y4Ma.userid] = true _OeJp(_Xkd0, _y4Ma.name.._FYug.str7.._FYug.str8.._FYug.str11, 0x4) _OeJp(_y4Ma, _FYug.str10.._FYug.str7.._Xkd0.name.._FYug.str9.._FYug.str11, 0x4) elseif _y4Ma == nil then _OeJp(_Xkd0, _FYug.str19, 0x4) else _OeJp(_Xkd0, _FYug.str18, 0x4) end end else _OeJp(_Xkd0, _FYug.str17, 0x4) end elseif(_2rou[0x2] == "r" or _2rou[0x2] == "remove" ) and GLOBAL.tonumber(_2rou[0x3]) ~= nil then if TUNING.DYC_SUPERWALL_OWNERSHIP == 0x1 then local _Hqdo = GLOBAL.AllPlayers[GLOBAL.tonumber(_2rou[0x3])] if GLOBAL.TheWorld.dyc_superwall_authorizationlist ~= nil then if _Hqdo ~= nil and _Hqdo ~= _Xkd0 then if GLOBAL.TheWorld.dyc_superwall_authorizationlist[_XwXs] == nil then GLOBAL.TheWorld.dyc_superwall_authorizationlist[_XwXs] = {} end GLOBAL.TheWorld.dyc_superwall_authorizationlist[_XwXs][_Hqdo.userid] = false _OeJp(_Xkd0, _Hqdo.name.._FYug.str16.._FYug.str8.._FYug.str11, 0x4) _OeJp(_Hqdo, _FYug.str10.._FYug.str16.._Xkd0.name.._FYug.str9.._FYug.str11, 0x4) elseif _Hqdo == nil then _OeJp(_Xkd0, _FYug.str19, 0x4) else _OeJp(_Xkd0, _FYug.str18, 0x4) end end else _OeJp(_Xkd0, _FYug.str17, 0x4) end elseif(_2rou[0x2] == "l" or _2rou[0x2] == "list" ) then if GLOBAL.TheWorld.dyc_superwall_authorizationlist ~= nil then if GLOBAL.TheWorld.dyc_superwall_authorizationlist[_XwXs] == nil then GLOBAL.TheWorld.dyc_superwall_authorizationlist[_XwXs] = {} end local _uE9Z = _FYug.str26.."\n" for _EdyG = 0x1, #GLOBAL.AllPlayers do _uE9Z = _uE9Z.._FYug.str23.._EdyG.." ("..GLOBAL.AllPlayers[_EdyG].name..")  " if _Xkd0 == GLOBAL.AllPlayers[_EdyG] or GLOBAL.TheWorld.dyc_superwall_authorizationlist[_XwXs][GLOBAL.AllPlayers[_EdyG].userid] == true then _uE9Z = _uE9Z.._FYug.str24 else _uE9Z = _uE9Z.._FYug.str25 end _uE9Z = _uE9Z.."\n" end _OeJp(_Xkd0, _uE9Z, 0xc, {0x1, 0x1, 0x0, 0x1}) end elseif _2rou[0x2] == "d" and _EURX(_XwXs) then if _2rou[0x3] == "l" and _2rou[0x4] ~= nil then local _EFuk = string.upper(_2rou[0x4]) _EFuk = _P7XT[_EFuk] if _EFuk and _m0KV[_EFuk] then _FYug = _m0KV[_EFuk] TUNING.DYC_SUPERWALL_STRINGS = _FYug TUNING.DYC_SUPERWALL_LANGUAGE = _EFuk _2tqF(_FYug) else _OeJp(_Xkd0, "wrong l cmd" ) end elseif _2rou[0x3] == "o" and _2rou[0x4] ~= nil then local _THbT = GLOBAL.tonumber(_2rou[0x4]) if _THbT == 0x0 or _THbT == 0x1 then TUNING.DYC_SUPERWALL_OWNERSHIP = _THbT else _OeJp(_Xkd0, "wrong o cmd" ) end elseif _2rou[0x3] == "dmg" and _2rou[0x4] ~= nil then local _Itph = GLOBAL.tonumber(_2rou[0x4]) if _Itph ~= nil then TUNING.DYC_SUPERWALL_REBOUNDDAMAGE = _Itph else _OeJp(_Xkd0, "wrong dmg cmd" ) end elseif _2rou[0x3] == "c" and _2rou[0x4] ~= nil then local _uCRK = _rC9a(_2rou[0x4]) if _uCRK ~= nil then TUNING.DYC_SUPERWALL_COMPANION = _uCRK else _OeJp(_Xkd0, "wrong c cmd" ) end elseif _2rou[0x3] == "nc" and _2rou[0x4] ~= nil then local _JoYx = _rC9a(_2rou[0x4]) if _JoYx ~= nil then TUNING.DYC_SUPERWALL_WALLSETNOCONSUMPTION = _JoYx else _OeJp(_Xkd0, "wrong nc cmd" ) end elseif _2rou[0x3] == "spd" and _2rou[0x4] ~= nil then local _vGRG = GLOBAL.tonumber(_2rou[0x4]) if _vGRG ~= nil then _Xkd0.components.locomotor.runspeed = _vGRG else _OeJp(_Xkd0, "wrong spd cmd" ) end elseif _2rou[0x3] == "a" and #_qebn >= 0x4 then local _Jmku = "" for _2XDO = 0x4, #_qebn do if _qebn[_2XDO] ~= nil then _Jmku = _Jmku.._qebn[_2XDO].." " end end GLOBAL.TheWorld:DoTaskInTime(0.1, function() GLOBAL.TheNet:Announce(_Jmku) end) elseif _2rou[0x3] == "s" and _2rou[0x4] ~= nil then local _wAsh = GLOBAL.SpawnPrefab(_2rou[0x4]) if _wAsh ~= nil then _wAsh.Transform:SetPosition(_Xkd0:GetPosition():Get()) local _vvd1 = GLOBAL.tonumber(_2rou[0x5]) if _vvd1 ~= nil and _vvd1 > 0x0 and _wAsh.components.stackable then _wAsh.components.stackable.stacksize = math.ceil(_vvd1) end else _OeJp(_Xkd0, "wrong s cmd" ) end else _OeJp(_Xkd0, "wrong cmd" ) end else _OeJp(_Xkd0, _FYug.cmdincorrect, 0x5) end end end if _Mks6 then return _eNiG(_E8BA, _XwXs, _8CUo, _lZn5, _FJYp, _4GqQ, _DbUh, ...) end end end end local function _22Cn(_a642) if GLOBAL.TheWorld.ismastersim then if _a642.components.follower then _a642:ListenForEvent( "startfollowing" , function(_Wzpq) if GLOBAL.TheWorld.dyc_superwall_companions == nil then GLOBAL.TheWorld.dyc_superwall_companions = {} end GLOBAL.TheWorld.dyc_superwall_companions[_Wzpq.GUID] = _Wzpq end) _a642:ListenForEvent( "stopfollowing" , function(_oal8) if GLOBAL.TheWorld.dyc_superwall_companions == nil then GLOBAL.TheWorld.dyc_superwall_companions = {} end GLOBAL.TheWorld.dyc_superwall_companions[_oal8.GUID] = nil end) end if _a642.components.builder then local _XYKH = _a642.components.builder.GiveAllRecipes _a642.components.builder.GiveAllRecipes = function(_wQ1V) _XYKH(_wQ1V) TUNING.DYC_SUPERWALL_WALLSETNOCONSUMPTION = _wQ1V.freebuildmode local _ZKU3 = _a642.components.talker local _kJpo = "" if _wQ1V.freebuildmode then print( "SuperWall: Free Build Mode is turned ON! Now fast build tool does not consume wall items!" ) _kJpo = _FYug.freebuildmodeon else print( "SuperWall: Free Build Mode is turned OFF!" ) _kJpo = _FYug.freebuildmodeoff end if _ZKU3 then _ZKU3:Say(_kJpo, 0x6) end end end end end AddPrefabPostInit( "world" , _YOmF) AddPrefabPostInitAny(_22Cn) local function _k7FC(_dDFN, _ssID) _dDFN.dycsw_wallbuilderrotation = _ssID end AddModRPCHandler(modname, "SetWallBuilderRatation" , _k7FC) local function _HnAv(_pttG) SendModRPCToServer(GetModRPC(modname, "SetWallBuilderRatation" ), _pttG) end _CXdB.SetWallBuilderRatation = _HnAv local function _UGEl(_aRyz, _laSm) _aRyz.dycsw_wallbuilderindex = _laSm end AddModRPCHandler(modname, "SetWallBuilderIndex" , _UGEl) local function _jbgq(_FS4u) SendModRPCToServer(GetModRPC(modname, "SetWallBuilderIndex" ), _FS4u) end _CXdB.SetWallBuilderIndex = _jbgq local function _t7pe(_ixnM, _kyO0) _ixnM.dycsw_wallbuilderheight = _kyO0 end AddModRPCHandler(modname, "SetWallBuilderHeight" , _t7pe) local function _qSEN(_DtCw) SendModRPCToServer(GetModRPC(modname, "SetWallBuilderHeight" ), _DtCw) end _CXdB.SetWallBuilderHeight = _qSEN local function _ffBr(_KvtG, _hj0G, _z9nW, _qzdN, _DVpX) local _v16A = _KvtG local _GCXl = _v16A.components.inventory.activeitem if _GCXl and _GCXl.components.inventoryitem and _GCXl.components.deployable and _GCXl.components.deployable.ondeploy then local _qHon = GLOBAL.Vector3(_hj0G, 0x0, _z9nW) _GCXl.components.deployable.ondeploy(_GCXl, _qHon, _v16A, _qzdN, _DVpX) end end AddModRPCHandler(modname, "BuildWallSet" , _ffBr) local function _G7EX(_dRFa, _HhAq, _FRxd, _qY3t) SendModRPCToServer(GetModRPC(modname, "BuildWallSet" ), _dRFa, _HhAq, _FRxd, _qY3t) end _CXdB.BuildWallSet = _G7EX local function _0N6S(_y29O, _wPq1, _V9qs, _5pJV) local _qopn = _y29O local _BQ5Z = _qopn.components.inventory.activeitem if _BQ5Z and _BQ5Z.components.inventoryitem and _BQ5Z.components.deployable and _BQ5Z.components.deployable.ondeploy then local _eT4B = GLOBAL.Vector3(_wPq1, 0x0, _V9qs) _BQ5Z.components.deployable.ondeploy(_BQ5Z, _eT4B, _qopn, _5pJV, nil, _qopn.dycsw_customwallset) end end AddModRPCHandler(modname, "BuildCustomWallSet" , _0N6S) AddModRPCHandler(modname, "CustomWallSetInit" , function(_O5x2) _O5x2.dycsw_customwallset = {} end) AddModRPCHandler(modname, "CustomWallSetSetPivot" , function(_bWzl, _S0O2, _1JFG) if _bWzl.dycsw_customwallset then _bWzl.dycsw_customwallset.pivot = GLOBAL.Vector3(_S0O2, 0x0, _1JFG) end end) AddModRPCHandler(modname, "CustomWallSetAddWall" , function(_Beia, _phcM, _ySrR, _7jJN, _UYnZ, _Mxri, _0ydA) if _Beia.dycsw_customwallset then local _Jww1 = {} _Jww1.walltype = _phcM if _ySrR and _7jJN then _Jww1.offset = GLOBAL.Vector3(_ySrR, 0x0, _7jJN) end _Jww1.height = _UYnZ _Jww1.rotation = _Mxri _Jww1.isswingright = _0ydA table.insert(_Beia.dycsw_customwallset, _Jww1) end end) local function _lyxa(_K4mH, _2VEs, _FRnI, _qbic) SendModRPCToServer(GetModRPC(modname, "CustomWallSetInit" )) if _qbic.pivot then SendModRPCToServer(GetModRPC(modname, "CustomWallSetSetPivot" ), _qbic.pivot.x, _qbic.pivot.z) end for _wP4e, _Wak0 in pairs(_qbic) do if type(_Wak0) == "table" and _Wak0.walltype then local _dMcb = _Wak0.offset or GLOBAL.Vector3(0x0, 0x0, 0x0) SendModRPCToServer(GetModRPC(modname, "CustomWallSetAddWall" ), _Wak0.walltype, _dMcb.x, _dMcb.z, _Wak0.height, _Wak0.rotation, _Wak0.isswingright) end end SendModRPCToServer(GetModRPC(modname, "BuildCustomWallSet" ), _K4mH, _2VEs, _FRnI) end _CXdB.BuildCustomWallSet = _lyxa local function _wzGJ(_WJc0, _MQ70, _29Mj, _kFjI) local _otFF = _WJc0 local _EtnK = _otFF.components.inventory.activeitem if _EtnK and _EtnK.components.inventoryitem and _EtnK.components.deployable and _EtnK.components.deployable.ondeploy then local _UvDp = GLOBAL.Vector3(_MQ70, 0x0, _29Mj) _EtnK.components.deployable.ondeploy(_EtnK, _UvDp, _otFF, _kFjI) end end AddModRPCHandler(modname, "BuildWall" , _wzGJ) local function _TC6g(_kOWR, _8sAP, _SdlX) _SdlX = _SdlX or 0x0 SendModRPCToServer(GetModRPC(modname, "BuildWall" ), _kOWR, _8sAP, _SdlX) end _CXdB.BuildWall = _TC6g local function _xaQI() if _CXdB.PreviousWallSet then _CXdB.PreviousWallSet() end end local function _DDXd() if _CXdB.NextWallSet then _CXdB.NextWallSet() end end local function _3aeC() if _CXdB.RotateWallSet then _CXdB.RotateWallSet() end end local function _vCgq() if _CXdB.IncreaseWallSetHeight then _CXdB.IncreaseWallSetHeight() end end local function _mRhz() if _CXdB.DecreaseWallSetHeight then _CXdB.DecreaseWallSetHeight() end end GLOBAL.TheInput:AddKeyDownHandler(0x11a, _xaQI) GLOBAL.TheInput:AddKeyDownHandler(0x11b, _DDXd) GLOBAL.TheInput:AddKeyDownHandler(0x11c, _mRhz) GLOBAL.TheInput:AddKeyDownHandler(0x11d, _vCgq) GLOBAL.TheInput:AddKeyDownHandler(0x11e, _3aeC) local function _dG8G(_TCK5, _2ZXA) AddClassPostConstruct( "widgets/".._TCK5, _2ZXA) end local _hznT = {} _CXdB.defaultImages = _hznT local _P5Wp = function(_P2mk) if _P2mk and type(_P2mk) == "string" then return _P2mk:find( "dyc" ) and _P2mk:find( "door" ) and not _P2mk:find( "park" ) end return false end _dG8G( "recipepopup" , function(_JtvG) local _ljDa = _JtvG.GetSkinOptions _JtvG.GetSkinOptions = function(_5WU0, ...) if not _ljDa then return {} end local _cjYa = _ljDa(_5WU0, ...) local _31kd = _5WU0.recipe and _5WU0.recipe.product if _cjYa and _cjYa[0x1] and _31kd and _hznT[_31kd] then _cjYa[0x1].image = _hznT[_31kd] end return _cjYa end local _mOu6 = _JtvG.BuildWithSpinner _JtvG.BuildWithSpinner = function(_pwLr, ...) local _52Uk = _mOu6(_pwLr, ...) local _tY7z = require( "widgets/image" ) local _hdUT = _pwLr.skins_spinner local _wXEv = _hdUT and _hdUT.spinner if _wXEv then local _PwRG = _wXEv:AddChild(_tY7z( "images/inventoryimages/dycdoorshared.xml" , "dycdoorshared.tex" )) local _gVwX = _wXEv.fgimage and _wXEv.fgimage:GetPosition() or Vector3() _PwRG:SetPosition(_gVwX) _PwRG:SetScale(0.9) _PwRG:SetClickable(false) if _wXEv.options then local _Sj75 = _pwLr.recipe and _pwLr.recipe.product local _9zrZ = _wXEv.SetSelectedIndex _wXEv.SetSelectedIndex = function(_Imfd, _cKHo, ...) if _cKHo and _cKHo > 0x1 and _P5Wp(_Sj75) then _PwRG:Show() else _PwRG:Hide() end return _9zrZ(_Imfd, _cKHo, ...) end end end return _52Uk end end) _dG8G( "itemtile" , function(_mz3Z) local _hARz = _mz3Z.item local _j9q2 = _hARz.AnimState:GetSkinBuild() local _Pfkj = _j9q2 ~= nil and #_j9q2 > 0x0 local _F6Bk = _hARz and _hARz.prefab if _F6Bk and _P5Wp(_F6Bk) and _Pfkj then local _0cAR = require( "widgets/image" ) local _W5lk = _mz3Z:AddChild(_0cAR( "images/inventoryimages/dycdoorshared.xml" , "dycdoorshared.tex" )) _W5lk:SetClickable(false) end end) local function _SBte(_ZDtR) local _2HQr = GLOBAL.AllRecipes[_ZDtR] if _2HQr == nil then return end _2HQr.level = {MAGIC = 0xa, SCIENCE = 0xa, ANCIENT = 0xa, ORPHANAGE = 0xa, SCULPTING = 0xa, PERDOFFERING = 0xa, SHADOW = 0xa} _2HQr.nounlock = true end if GetModConfigData( "recipe_vanilla" ) == false then _SBte( "wall_hay_item" ) _SBte( "wall_wood_item" ) _SBte( "wall_stone_item" ) _SBte( "wall_ruins_item" ) _SBte( "wall_limestone_item" ) _SBte( "wall_moonrock_item" ) _SBte( "wall_enforcedlimestone_item" ) _SBte( "fence_item" ) _SBte( "fence_gate_item" ) end local function _CIV9(_iyjC) _iyjC.itemprefab = _iyjC.itemprefab and string.lower(_iyjC.itemprefab) or "" _iyjC.abbr = _iyjC.abbr and string.lower(_iyjC.abbr) or "" _iyjC.ingredient = _iyjC.ingredient or {} _iyjC.tab = _iyjC.tab or RECIPETABS.TOWN _iyjC.tech = _iyjC.tech or TECH.NONE _iyjC.num = _iyjC.num or 0x4 if GetModConfigData( "recipe" ) ~= "normal" then table.insert(_iyjC.ingredient, Ingredient( "transistor" , _iyjC.num)) if _iyjC.isdoor then table.insert(_iyjC.ingredient, Ingredient( "gears" , math.ceil(_iyjC.num / 0x2))) end end local _b5Hg = AddRecipe(_iyjC.itemprefab, _iyjC.ingredient, _iyjC.tab, _iyjC.tech, nil, nil, nil, _iyjC.num) _b5Hg.atlas = _iyjC.atlas or (_iyjC.abbr and "images/inventoryimages/".._iyjC.abbr..".xml" ) _b5Hg.image = _iyjC.image or (_iyjC.abbr and _iyjC.abbr..".tex" ) end if GetModConfigData( "recipe_fence" ) == true then _CIV9({itemprefab = "dyc_fence_item" , atlas = "images/inventoryimages.xml" , image = "fence_item.tex" , isdoor = false, ingredient = {Ingredient( "twigs" , 0x4)}, num = 0x4, }) _CIV9({itemprefab = "dyc_fence_gate_item" , atlas = "images/inventoryimages.xml" , image = "fence_gate_item.tex" , isdoor = true, ingredient = {Ingredient( "log" , 0x4)}, num = 0x2, }) _CIV9({itemprefab = "dyc_park_fence_item" , abbr = "parkfence" , isdoor = false, ingredient = {Ingredient( "flint" , 0x4)}, num = 0x4, }) _CIV9({itemprefab = "dyc_park_door_item" , abbr = "parkdoor" , isdoor = true, ingredient = {Ingredient( "flint" , 0x4)}, num = 0x4, }) _CIV9({itemprefab = "dyc_park_gate_item" , abbr = "parkgate" , isdoor = true, ingredient = {Ingredient( "flint" , 0x4)}, num = 0x2, }) end if GetModConfigData( "recipe_door" ) == true then _CIV9({itemprefab = "dyc_door_hedge_block_item" , abbr = "dychedgeblockdoor" , isdoor = true, ingredient = {Ingredient( "cutgrass" , 0x4)}, num = 0x4}) _CIV9({itemprefab = "dyc_door_hedge_cone_item" , abbr = "dychedgeconedoor" , isdoor = true, ingredient = {Ingredient( "cutgrass" , 0x4)}, num = 0x4}) _CIV9({itemprefab = "dyc_door_hedge_layered_item" , abbr = "dychedgelayereddoor" , isdoor = true, ingredient = {Ingredient( "cutgrass" , 0x4)}, num = 0x4}) _CIV9({itemprefab = "dyc_door_hay_item" , abbr = "haydoor" , isdoor = true, ingredient = {Ingredient( "cutgrass" , 0x4)}, num = 0x4}) _CIV9({itemprefab = "dyc_door_wood_item" , abbr = "wooddoor" , isdoor = true, ingredient = {Ingredient( "log" , 0x4)}, num = 0x4}) _CIV9({itemprefab = "dyc_door_stone_item" , abbr = "stonedoor" , isdoor = true, ingredient = {Ingredient( "rocks" , 0x4)}, num = 0x4}) _CIV9({itemprefab = "dyc_door_ruin_item" , abbr = "ruindoor" , isdoor = true, ingredient = {Ingredient( "thulecite_pieces" , 0x4)}, num = 0x4}) _CIV9({itemprefab = "dyc_door_limestone_item" , abbr = "limestonedoor" , isdoor = true, ingredient = {Ingredient( "rocks" , 0x4)}, num = 0x4}) _CIV9({itemprefab = "dyc_door_moonrock_item" , abbr = "moonrockdoor" , isdoor = true, ingredient = {Ingredient( "moonrocknugget" , 0x4)}, num = 0x4}) _CIV9({itemprefab = "dyc_door_ice_item" , abbr = "icedoor" , isdoor = true, ingredient = {Ingredient( "ice" , 0x4)}, num = 0x4}) _CIV9({itemprefab = "dyc_door_sea_item" , abbr = "seadoor" , isdoor = true, ingredient = {Ingredient( "cutreeds" , 0x4), Ingredient( "rocks" , 0x4)}, num = 0x4, }) _CIV9({itemprefab = "dyc_door_pigruin_item" , abbr = "dycpigruindoor" , isdoor = true, ingredient = {Ingredient( "rocks" , 0x4)}, num = 0x4, }) end if GetModConfigData( "recipe_wall" ) == true then _CIV9({itemprefab = "dyc_wall_hedge_block_item" , abbr = "dychedgeblockwall" , isdoor = false, ingredient = {Ingredient( "cutgrass" , 0x4)}, num = 0x4}) _CIV9({itemprefab = "dyc_wall_hedge_cone_item" , abbr = "dychedgeconewall" , isdoor = false, ingredient = {Ingredient( "cutgrass" , 0x4)}, num = 0x4}) _CIV9({itemprefab = "dyc_wall_hedge_layered_item" , abbr = "dychedgelayeredwall" , isdoor = false, ingredient = {Ingredient( "cutgrass" , 0x4)}, num = 0x4}) _CIV9({itemprefab = "dyc_wall_hay_item" , atlas = "images/inventoryimages.xml" , image = "wall_hay_item.tex" , isdoor = false, ingredient = {Ingredient( "cutgrass" , 0x4)}, num = 0x4, }) _CIV9({itemprefab = "dyc_wall_wood_item" , atlas = "images/inventoryimages.xml" , image = "wall_wood_item.tex" , isdoor = false, ingredient = {Ingredient( "log" , 0x4)}, num = 0x4, }) _CIV9({itemprefab = "dyc_wall_stone_item" , atlas = "images/inventoryimages.xml" , image = "wall_stone_item.tex" , isdoor = false, ingredient = {Ingredient( "rocks" , 0x4)}, num = 0x4, }) _CIV9({itemprefab = "dyc_wall_ruin_item" , atlas = "images/inventoryimages.xml" , image = "wall_ruins_item.tex" , isdoor = false, ingredient = {Ingredient( "thulecite_pieces" , 0x4)}, num = 0x4, }) _CIV9({itemprefab = "dyc_wall_limestone_item" , abbr = "limestonewall" , isdoor = false, ingredient = {Ingredient( "rocks" , 0x4)}, num = 0x4, }) _CIV9({itemprefab = "dyc_wall_moonrock_item" , atlas = "images/inventoryimages.xml" , image = "wall_moonrock_item.tex" , isdoor = false, ingredient = {Ingredient( "moonrocknugget" , 0x4)}, num = 0x4, }) _CIV9({itemprefab = "dyc_wall_ice_item" , abbr = "icewall" , isdoor = false, ingredient = {Ingredient( "ice" , 0x4)}, num = 0x4, }) _CIV9({itemprefab = "dyc_wall_sea_item" , abbr = "seawall" , isdoor = false, ingredient = {Ingredient( "cutreeds" , 0x4), Ingredient( "rocks" , 0x4)}, num = 0x4, }) _CIV9({itemprefab = "dyc_wall_pigruin_item" , abbr = "dycpigruinwall" , isdoor = false, ingredient = {Ingredient( "rocks" , 0x4)}, num = 0x4, }) end local _iwxk = nil if GetModConfigData( "recipe_tool" ) == true then _iwxk = AddRecipe( "dyc_wallbuilderitem" , {Ingredient( "cutgrass" , 0x2), Ingredient( "twigs" , 0x2), Ingredient( "rocks" , 0x4)}, RECIPETABS.TOOLS, TECH.NONE) _iwxk.atlas = "images/inventoryimages/wallbuilder.xml" _iwxk.image = "wallbuilder.tex" end if GetModConfigData( "recipe" ) == "normal" then else end 